# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool: 'AWS'

steps:

- task: Maven@3
  inputs:
    goals: 'compile'
  displayName: Compile COde

- task: Maven@3
  displayName: Lint Check
  inputs:
    goals: 'checkstyle:checkstyle'

- task: Maven@3
  displayName: Build Package
  inputs:
    goals: 'package'

- task: CmdLine@2
  inputs:
    script: |
      docker build -t rkalluru/b48-$(appName):$(Build.BuildId) .
      docker push rkalluru/b48-$(appName):$(Build.BuildId)
  displayName: Docker Build Push
- task: CmdLine@2
  inputs:
    script: |
      mkdir output
      cd output
      sed -e "s/BUILDNO/$(Build.BuildId)/" ../k8s/deployment.yml >deployment.yml
      sed -e "s/BUILDNO/$(Build.BuildId)/" ../k8s/service.yml >service.yml
      env
      pwd
  displayName: Update Kubernetes
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/output'
    ArtifactName: 'k8s-ouptuts'
    publishLocation: 'Container'

#- task: CmdLine@2
#  inputs:
#    script: |
#      cd target
#      mkdir publish
#      cp *depen*.jar publish/shipping.jar
#      cd publish
#      az artifacts universal publish --organization https://dev.azure.com/DevOps-Batches/ --project="DevOps48" --scope project --feed RoboShop --name  $(appName) --version 1.0.$(Build.BuildId) --description "$(appName)" --path .
#  displayName: Publish Artifacts

variables:
  appName: "shipping"
  JAVA_HOME_8_X64: "/usr/lib/jvm/java-8-openjdk-amd64"